// Code generated by "esc -o ui/static.go -prefix ui/static -pkg ui -ignore tests|node_modules|package.*json|babel.*|eslint.* ui/static"; DO NOT EDIT.

package ui

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/deck_list.js": {
		name:    "deck_list.js",
		local:   "ui/static/deck_list.js",
		size:    1463,
		modtime: 1570480914,
		compressed: `
H4sIAAAAAAAC/3RUUYvjNhB+z68Y1IWzuViRvT6WvbXzUK4lhcvTlYNSyq5WnsRqFClIirPdkP9eJNvJ
ZtvDkEgz33zzzWgkfNkZ66HBFd8rD0Jx5+ALis1X6TwcJwDCaOftXnhjkzRaAHwrHX1EBTU0Ruy3qD0V
FrnHXxSGXUL2iqQPV2AayQMv5U2TkAbFJlPS+R54mkwA1ugBB4oxmUW/t/pMc8Y6DLrFxiXx91pbNAV5
4f+tDou6Qfubx61LLnmvze+qpFJrtIvfl1+hfksfQQDUGeuThE/hOYV6DpxqvkWYw3NcpCNsy3fJsAZI
jhCcUxDcNu7RIm/+mYLGF/9osZN4eOQeToHvHALwVCk5n1QcWourmvx0cwwcJwJGCyXFpiZ8t6POc+u/
oXPS6OTDgPkwvTm+SXVKH8a+rrhy+EDmA7Ca8fmkamQXElfCNDi/OY6tC8K+ee5d8k72Ab5wj8m1/jQ9
VbPIMKlmkbHi/YTVxAWWTEm9IWM1vekHNbVmSHwu6L8VBMGuW8PLVmlXk9b73efZ7HA40MMtNXY9Kxhj
M9etCRxk49uaFCWBFuW69f06CP/ZvNSEAYOihKIkff+rHfctNDVZ5vdwu/gkspzmwLIC6H1WQNHlpWCQ
05zeQxG+Ni9FhECRBVtWfP8kWIjKQkT4Xpf3kN8t7rrsri26u9dtCazNiu9hl7Nx22VlW3TlK5m9V8KA
tUXZFeWCvRJYSaVqoo3GHlmFQkPjw3HOlJw/DYN0nse/jdQJIVeX4HLAbyZyvA9yBb0Z5sDSsfvR8jCJ
iPhWQCNXK6hjKGSX4Rieg8ASERXkjF14CO+4VPxZIWhzIAOjCpd8IOvjw+7PoQbCCHyEhq7R9ymmV44k
epZG+zZJ4SPkF/857te9Un8gt+9jo3Nh9tb9r2cp9d6jS/pu/hUvtzDbndGofXgFzhvqlBSYZEWaDjUN
BTeDh03hNh1Og5Kgk0Cfp/efnZ/HszpN/g0AAP//jQlJmbcFAAA=
`,
	},

	"/index.html": {
		name:    "index.html",
		local:   "ui/static/index.html",
		size:    455,
		modtime: 1563585442,
		compressed: `
H4sIAAAAAAAC/2xRsU4rMRDs7yv2bf3CKR1C9kmIUENBQ2nsDV7i8528mwv5e+RzElFQeUazO5rxmn+7
l6e399dniDqmoetMfSG5/GmRMg4dgInkQgUAZiR14KMrQmrxqPvNPUL/W8xuJIsL02meiiL4KStltXji
oNEGWtjTZiX/gTMru7QR7xLZ7WrVvJQ10bAjf4DHeTZ9401LnA9QKFkUPSeSSKQIsdDe4ug433kRBD3P
ZFHpW/uVrylN38pU+DGF88Ux8AIcLAbyB0HwyYlYrNEdZyrYxupXbNdM8mD6uL0s94GXa+yrkZAITxmH
v1V1KjetWrQsFYovPCtI8ZcyX7cu4xSOiepeGxo607ez/QQAAP//fSD4gMcBAAA=
`,
	},

	"/main.css": {
		name:    "main.css",
		local:   "ui/static/main.css",
		size:    4150,
		modtime: 1592189875,
		compressed: `
H4sIAAAAAAAC/6xX/46rNhP9n6cY3dUn3f2EEWQhm2XVq75HVVUGJsFdY1PbbLKt8u6VbQg/QrLdqtLV
3YBnjo/tM8dDbRoOfwUAeykM2dOG8Y8cNBWaaFRs/zoMafYn5rBJ2tNrcA6CQlYfLq+hJ3JklalzeI5j
O2rfqQMTOcRAOyPtm5ZWFROHHJJok2EDcbTbvWDzGgQABS3fDkp2osrhAUvc79PX+4Q4E0hqZIfaWMQ0
sy9LyaXK4SEts+2WOpJ1Egb1JgzqpzCo0zCos57yQC+GRFkWX5ktyXrscdv83iTRLt5YtHMQRIYZji7C
4MkQytlB5FCiMKh8hFblEiGL/+exN9fY2wt2/XQ9mm7SYTS9Ht1st8Nodj2a2BNxo7qhnIdBZCn/5h6W
0ZdzOwdBGwZ7qZrJlhIj2xziUQKkkMbIZjh2l8bZNGMIiKPtJaLjYSD5l3AnCpuGcdyb2eQdB85yTrUh
ck/MR4tuqsW7VYIuv5QV3tyTqZRJL0d1KOj3OIT+XxTvHmdss/YEW181hVQVKqJoxTqdw8uylobSE/Td
UaiYbjn9yGHP0YXav6RiCkvDpFWb5F0jXE5DmVhP+r3Thu0/SCmFQWFGjd7Fow7suuRo/s40M1hNx5mo
UTHjfaMzRoowYKLtzC92s3/6pruiYebbry6HHLF4Y4bQtkWqqCgxByEFWkJDET5lfm/GM4c4ytR9P/Hb
O4Ittvup393IbgRlApWjszCu1wX+sWYGbx9eIU9E17SSx14JyS4NIXlJQ9gkmdXDJnuEuD1B6nUQBgBw
IzTxkVYxz9dk/+8VXNaMV7f1G2nUmknxNQEBOP8izGCjFy7W4/2AinlZ9pdBEvdmdgm5mMVi3mlMpKhh
4kAusf+CkpPWiDDj0wMeFW1zsP/fLYEFWuSFSryGHfhSkf1k/nGZToU+oiKFPF2WlkMyL/I4ctejd7FW
auaXrZBTw95xKuSkPYGWnFXwUO0qxJcVHV4VSrTzTjgj5n9ThfQ/08VkrfY2uWAvTmNaS/PCHJ9lZ+wV
PL5Q6I13eJ7d3Y0UUre0xEXnkvjivdc6THxqyv8H6Jb64x4PhBZa8s7X/ng7+fvG/VR+itiv6FKDFoPZ
bSL4jsLoYRVfXMY/8aDbZz9ZXH/2DdOGvvmrbYrtneglCeHlOYQk3lojyh5voJRSWY3cQNk+WT+LQ0jS
eIQZa7+9Y1sKdcfN3X6qwvKNcKZ9lP1BtPngE53MmoJ4mdX3JSvmNMbQfM/Uep/Qn3cyNIBj0mCMs+l9
YzwPjLShRhPOxNucChNOtkM5rhbdsue55qHfD953GOfzPrmfWCPH0hAlj+s2cH/esZPzN/Eqbt+dzvxO
DYY37a9ml/hgb+cgePijQ22GG8wVxrGvZiFVQ/mnzXVP6qBoW8893H++LEMiemLa+YaL1kbJN5yTWom3
Kr1qtTe+IvsD+BxgRW1e/aKsrWFpQ5VZAXAG8045tNTUc9ZFukNa3cspmSr7T5ee6Oc542o/ydjT0ki1
wos+Fbgrb2dcs/osY8npZrz/c6Hkw71n3IidkBkWcDd+VQxpL4aphAvJq9flKTesqvgKuFPI1WfLLBWF
P4SfG6wYBV0qRAFUVPB98t2eWeE/uuyFi157JsA5OAd/BwAA//+GlgmyNhAAAA==
`,
	},

	"/main.js": {
		name:    "main.js",
		local:   "ui/static/main.js",
		size:    2810,
		modtime: 1570480914,
		compressed: `
H4sIAAAAAAAC/6xWTY/jNgy9+1ew3h5sIPX0PIELTL+AFkW32CnQY6LazFo7jqWKyqRG4P9e6Mu2Yicz
h94Chnx6fHyizI9SKA0/YvXyGycNByWOkBYPNVYvu5aTLr5Quk182id85Xh+RiIuujFX2eiOXDgqeNZM
UwRMJjJDTqqWEcGTlHBJACrRkVanSguV5TYCoBtORR0YltDheSSc5dspZ2eSCEqoRXU6YqeLz6h/atH8
/L7/pc5Sm5AuawomJXb1Dw1v6yw6r0BXn2+TqYjGthybsc2Yjk27R8cmpMuaJZ3xxFU+KpqL4xTNKuIV
ZRcKSbSv+NTRGRWUkOVQfufJRP/dwWD1K+sqnAgw6rsKqBIKDZqbo58u0JR2Zlz7s2KMzNb6E1fPnFD8
L5c7RGKOObdH4FKuhhD6uh5DTGEaBcBgxqGwq3Ey7pl3tTgXopNCmgHiKO9l3hc14mz8TEHhwc/WydUw
aqAMYK2omDaHm/B2fkzDSQvVFwplyyo0nsTsMmwgNeBPUqYbSB9Co/wA2VcGI3+DjOlKn1SQNxmrTbHx
pdL0F9dNln7wdl5BtBfEVXh6If0bwyrNQ+eALeFVvTki2OIKIi4OY/DumzqZLxJ/4Un3LRY1J9my3lyZ
U9uuWeA6L+1Eh+nyxt7KW26wImypufsPqKtmpvu8j3n/pnYDFVM1fUJW96E1M5ApCmVZwrf5OLk1m8gT
Nd4jYFBh2MDeLY1H+PpiQsN+A/sP4ffK1nyHODdkXMj9ThHjC2h5l5b+zd20vm0Woi5UH11r/41v9F0N
bVUsoXP6TMj/Ucn3GtIpvvKG3VBx+j88Ywu/zvS5Um+n8J8Tks4k080GhDQry2BchiClW24KJ2QvroWO
C2c7SyEV4iVY21ea4Bdyz5zNZC0qne1/ZrzFGrQAC2qGMhVo/Fdn+ehrDxiMaZuJrqXn7fPCA+nanH9Y
zCqXBlqt3luFH6KL5lCWNn0LR+mHyXlhjx5RN6J+hPSPj89/pm5Zzk65eubvNupz562uvtx3QXxFeovh
xkf/FnX/CL8+f/y9IK1495kf+uzivyuGPGpkSBJvICal/wZ6ktJYYooX4YXeJv8FAAD//1mSjsL6CgAA
`,
	},

	"/rater.js": {
		name:    "rater.js",
		local:   "ui/static/rater.js",
		size:    5878,
		modtime: 1592191245,
		compressed: `
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
`,
	},

	"/review_session.js": {
		name:    "review_session.js",
		local:   "ui/static/review_session.js",
		size:    2027,
		modtime: 1570480914,
		compressed: `
H4sIAAAAAAAC/5xVwW7jNhC96yumag8y4MoNglxiS0XQFuhhF9iN9x4z0tjihiYVcmSvYejfF5RISXSc
HPZim8SbNzOPb8Z8XytNcIaHhtQjI9RzWKPYdj+hha1We4jThbbn9LuJl1FUKGkICPe1YISQwSZaVchK
1HkEsKpu83+xeLmHlamZBF5mcYnFS5yvFvYiXy2q2x54l3/RaqfRmCm4dnfTgLs8Wi18jmi1Z7zHGjSG
KxlDIZgxwxkKJYlxiTruM9106NcGDU3hxEmgzVPd2ASWNo82yyjCH50sJW5ZI6iHwyMeOB7XLsU5AuiU
0E1BSiez7gaAKm7SJxSQQamKZo+S0kIjI/xPoD0lcckP8WwZoFMuJer/v33+BNkg7TIaMWZ4lAwkHsdH
SqZMAypVct087zlBBkyao43LO5zPWTFZCuwpwti5i5hN8zPvD5d/8EuQf0D9Qn42OnDID9DaGnZIgE49
r7NGarQcBBywBu27FS+J/bh8lPS1QX1ao8DuzeLfO2fOAvXtVcDmTJW475DTOy7zsOm7apSlV2ig02iU
OOBD12NSMCGe2WWlAQYy8KiAiJUHJgt0hnyHKQRdoxqqnMZx0+fmcmcNqRuc9tXUJSNcEyOcNBdeO7Z+
WZzBz94cSBETcxC4pTloRlzunuhUI7Q201RU5z++hcSiIcsy+MsTAxy5LNUxrbghpU+pbcqb0dujP7XR
xyYYNk5ohM0f565W+LMrtl24c7tZfsw37JmQz1+7tnpltJupqRC2z9iOYwx/X07//cWgLSdcoxffLc0v
TKeTldZdpUXFRalRpgLljqquiptRbQ9jdY2y/MeCk/5fwU2mo2wBhcE3YRprwQq8EjcfMIIZ6gCeqh/0
DmwqdfzqBEwCl4wGZOYkCwg2i+4XiimURt+LbfrS5GOfV+y/ZcKgN5Y3tNtq1rTsyDhdm9yJHYcmHtE0
gpLJinujWVfgqUa17QuH36whZLN/Rh3PAmtfH/Ok73dUsY3a6GcAAAD//50A0bzrBwAA
`,
	},

	"/stats_graph.js": {
		name:    "stats_graph.js",
		local:   "ui/static/stats_graph.js",
		size:    2917,
		modtime: 1570480914,
		compressed: `
H4sIAAAAAAAC/5RW3W7jNhO991MMCH8AlbUl2V9yk1guWmzdvUiKAim6GxRFrUi0zEIWDWpsayHo3Qv+
SKLsjZu9cULO8JwzR+SQrNoLiZCyTXzIEZI8Lkt4xhjLX2S830I9AkhEUaI8JCgk9fQMAG556f/Ncogg
Fclhxwr0E8liZD/nTI1+faZki7i/D4LT6eSf/u8LmQXzMAyD8piRCRD1x3sYoPma/5GX6MdpSkmphEwz
pcSkNqMRQMYQmGHp9EiGB1l0QF1uyRA0CtW/Q/l6CiKT4CqRrEiZ1A7Qnnc4bZG0OdAiObgPTjgRhwJb
Ij9nRYZbE+cboCa6gLlny3gYOWtPPMVtB6094qzAz2ra5dgynm3xMvGTnj/zuWT4I6LkrwdklBw5O/0k
KjKBdQghjGvN2cC4NqDN2htI2sUy4wVEUAOK/T3MwgnkbIP3MLubgFRLzOSrQBQ7NQ2Nq5UXBZOfbWGm
wKlF9RVQP5K9eGfpp7ZWW3SXjmLfDwz7QHmJscQv7Zf4M/zLH34oVqR91HyXKczOs8okzpnKc+oIgOrF
U8vhuQtUrtofS6BY9ilwY6HO3K1eIIKnGLf+Lq6o7/tm3+ziPaU18AKZPMY5NJ5CbIeeBx9gdiHzpZVp
PQsMcMJ4ThXTQKdJtvBKrdYy7TlaxS/nilfXFG9i1TusXjN4Q+3qutrVQO1GybXYVuwKpi1BK3U1kLqP
ncM0EInlxLF2AjytlF69FtQIoiiCEH6A9dO4/kKx9JrJuH6hnTnNGu5h/fhWUCMNC/jtqprWtndr2bxQ
W/ylFDfWKnGkpOK8f2kllvHCHv0l14uEyyRnkFQRaakIJF/VyC2dgIzIHQmW3/Lg43uYBzvoKq9T5yWt
w3uM8wP73pJtDGC9QFYhDPjPy1adI2zIclzn8SvLHT8WgVr9TTf+eJ8s14//FtV70msyEz6KFa9YSueX
qoY3hjmVvz89QgTr0SIDlHFRboTcRUT/m8fI6Lh2urjadn1fbjyipC4y88iISFzxkhj1i5wXDKpZREIC
X2dKs9MFGgLVvJvT7VZVNr9IWy4CBWQxWzNC64LbVz7A7E7bULATfFTKrYv2griBWRiGxgkfxaNQnUTl
PaPkRUY7t4ZU5xLfTauvju8hXQTZcjSwU7+S7MZobdXdLtVbQLUa/x/BC0qI15DAZIxrff6admC2X3OF
oN3FlxT7NxhSh+A4xFc/a/O+akajzaFIkIsCzs5L/wiFrThIdTq6INzA/NbrtrE+TLaj8aN6IOgFAcxv
+8hOpF3kfzZi34/me1ATW0Ywv1U9dlzrW2iTCyFpyo9ek4JqsISoW4wqvKXpxuN6J9Jma4MjfY6a0b8B
AAD//xIbl/xlCwAA
`,
	},

	"/stats_list.js": {
		name:    "stats_list.js",
		local:   "ui/static/stats_list.js",
		size:    2147,
		modtime: 1570480914,
		compressed: `
H4sIAAAAAAAC/5RVTW/bRhC981cM1i5AtjUZODrZJIvALpoAzqXuzTCiBXckbkztssuh3EDQfy/2gxQp
K45zEcjZt2/mzYwe5abVhuCeOHV/Gd7WsDJ6AyzNOhv6srax9GvHrqOo0qojINy0DSeEApZRXiMXaMoI
IK/fl7dYPV1B3rVcgRQFcxwXAqsnVuaZDZd5Vr93cCG3UDW86wZYhw1WdGH0M7MAy7gob7gR3RXkWb0I
QQ+b0DeyI0fvDhx3JuS2jPJsqC7KN1yqIV2lFXGp0LCh7pveGFShDbDS5oWGihtxpMHe7ZtQVSP9gy2Q
jFbr8o53BH/jVuIzCvhAVkQ4GpFDDhNgF5zGJJ43G4hPZPikCM2WN68xy4D5CdpbuVrJqm/o22vEYkSd
ps4z25s8s40vo+V1FOF/btUErnjfkB+G7/id7Ah2EYDbMNNXpE2cuAgA1bJLv2ADBQhd9RtUlFYGOeGf
Ddq3mAm5Zcn1DJ1KpdB8/OfzHRTjyk4hbrGhAIXPk+2Pj2n+7dF8u3ebpU3MrBqWpLxtUYmbWjYintCl
6CtyJHu7IGskCMFRkEHqjRpTjNgObXOqp9j+HKs/LuRs8tdKZmJtaMbpkLH7nbO6EBQeMNVtUAk0nwg3
XXzQMg8HJu8JA9OE1/PJFfjMaYNqTTUURQHvktCD62iStNVtb4fkNYZ6X1Z1f1Dz8O4xmVF8t03OIpJU
q6rmam2tK94BcWPHs0+gKIOaqZ6hMelKKhHHO7AWENDu0UrxHOmWNz2GYr9XbjjeH/p5UvHb5h4ETefu
DkIF6Ya3RyUvc92S1Ko839noPs/C+zIZLn3VUsWMvZi41+DZfg+z3s8XYLAZKOAzpzo1ulcivlzArx7/
wAazYo+hEfOL92SkWkMRaolHwrKAywX8AcvznWNeNVqbw3EGl4tkL2AJV8BYAr8FguX5bsT8ApeLfb18
26o4o5931oZet4WzqYHPL1t/ueWEcSgstMN+HYaPwwdij+40SUnf6Yo36NvxIzc6G919nnPe1B9wTIz8
xEI9sMPngD2+MNB05iEP7KPsSBtZ2Tn7NdpH/wcAAP//jj7YDGMIAAA=
`,
	},

	"/": {
		name:  "/",
		local: `ui/static`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"ui/static": {
		_escData["/deck_list.js"],
		_escData["/index.html"],
		_escData["/main.css"],
		_escData["/main.js"],
		_escData["/rater.js"],
		_escData["/review_session.js"],
		_escData["/stats_graph.js"],
		_escData["/stats_list.js"],
	},
}
